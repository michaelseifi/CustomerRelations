//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CRDataStore
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ForecasterEntities : DbContext
    {
        public ForecasterEntities()
            : base("name=ForecasterEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<FORECASTER_CELL_COMMENT_TABLE> FORECASTER_CELL_COMMENT_TABLE { get; set; }
        public DbSet<FORECASTER_COMMENT_TABLE> FORECASTER_COMMENT_TABLE { get; set; }
        public DbSet<FORECASTER_CUSTOMER_EXCEPTIONS> FORECASTER_CUSTOMER_EXCEPTIONS { get; set; }
        public DbSet<FORECASTER_EVENTLOGS> FORECASTER_EVENTLOGS { get; set; }
        public DbSet<FORECASTER_FSI_TABLE> FORECASTER_FSI_TABLE { get; set; }
        public DbSet<FORECASTER_HOLIDAYS> FORECASTER_HOLIDAYS { get; set; }
        public DbSet<FORECASTER_KROGER_DIVISION_LIST> FORECASTER_KROGER_DIVISION_LIST { get; set; }
        public DbSet<FORECASTER_ORDER_KEY_GENERATOR> FORECASTER_ORDER_KEY_GENERATOR { get; set; }
        public DbSet<FORECASTER_SKU_EXCEPTIONS> FORECASTER_SKU_EXCEPTIONS { get; set; }
        public DbSet<FORECASTER_SUGGESTED_ORDER_TABLE> FORECASTER_SUGGESTED_ORDER_TABLE { get; set; }
        public DbSet<FORECASTER_TIE_LIST> FORECASTER_TIE_LIST { get; set; }
        public DbSet<FORECASTER_USER_TABLE> FORECASTER_USER_TABLE { get; set; }
        public DbSet<FORECASTER_QCQD_TABLE> FORECASTER_QCQD_TABLE { get; set; }
        public DbSet<ORDERING_CELL_COMMENT_TABLE> ORDERING_CELL_COMMENT_TABLE { get; set; }
        public DbSet<FORECASTER_CUSTOMER_SETTINGS> FORECASTER_CUSTOMER_SETTINGS { get; set; }
        public DbSet<FORECASTER_ORDER_TABLE> FORECASTER_ORDER_TABLE { get; set; }
        public DbSet<FORECASTER_CUSTOMER_SKU_SETTINGS> FORECASTER_CUSTOMER_SKU_SETTINGS { get; set; }
        public DbSet<FORECASTER_PERFORMANCES_EXCEPTIONS> FORECASTER_PERFORMANCES_EXCEPTIONS { get; set; }
        public DbSet<FORECASTER_KROGER_SALES_QTY_CASES> FORECASTER_KROGER_SALES_QTY_CASES { get; set; }
        public DbSet<FORECASTER_FORECAST_TABLE> FORECASTER_FORECAST_TABLE { get; set; }
    
        public virtual int FORECASTER_DELETE_PERFORMANCES_EXCEPTIONS(Nullable<System.Guid> gUID)
        {
            var gUIDParameter = gUID.HasValue ?
                new ObjectParameter("GUID", gUID) :
                new ObjectParameter("GUID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FORECASTER_DELETE_PERFORMANCES_EXCEPTIONS", gUIDParameter);
        }
    
        public virtual ObjectResult<FORECASTER_GET_ACTUAL_ORDERS_BY_SALES_ORDER_ID_Result> FORECASTER_GET_ACTUAL_ORDERS_BY_SALES_ORDER_ID(string cUSTOMERID, string sALES_ORDER_ID)
        {
            var cUSTOMERIDParameter = cUSTOMERID != null ?
                new ObjectParameter("CUSTOMERID", cUSTOMERID) :
                new ObjectParameter("CUSTOMERID", typeof(string));
    
            var sALES_ORDER_IDParameter = sALES_ORDER_ID != null ?
                new ObjectParameter("SALES_ORDER_ID", sALES_ORDER_ID) :
                new ObjectParameter("SALES_ORDER_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FORECASTER_GET_ACTUAL_ORDERS_BY_SALES_ORDER_ID_Result>("FORECASTER_GET_ACTUAL_ORDERS_BY_SALES_ORDER_ID", cUSTOMERIDParameter, sALES_ORDER_IDParameter);
        }
    
        public virtual ObjectResult<FORECASTER_GET_CUSTOMER_INFORMATION_Result> FORECASTER_GET_CUSTOMER_INFORMATION(string cUSTOMERID)
        {
            var cUSTOMERIDParameter = cUSTOMERID != null ?
                new ObjectParameter("CUSTOMERID", cUSTOMERID) :
                new ObjectParameter("CUSTOMERID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FORECASTER_GET_CUSTOMER_INFORMATION_Result>("FORECASTER_GET_CUSTOMER_INFORMATION", cUSTOMERIDParameter);
        }
    
        public virtual ObjectResult<FORECASTER_GET_ORDERS_STATUSES_Result> FORECASTER_GET_ORDERS_STATUSES()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FORECASTER_GET_ORDERS_STATUSES_Result>("FORECASTER_GET_ORDERS_STATUSES");
        }
    
        public virtual ObjectResult<FORECASTER_GET_SUGGESTED_ORDERS_Result> FORECASTER_GET_SUGGESTED_ORDERS(Nullable<int> cUSTOMERID, string sKU)
        {
            var cUSTOMERIDParameter = cUSTOMERID.HasValue ?
                new ObjectParameter("CUSTOMERID", cUSTOMERID) :
                new ObjectParameter("CUSTOMERID", typeof(int));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FORECASTER_GET_SUGGESTED_ORDERS_Result>("FORECASTER_GET_SUGGESTED_ORDERS", cUSTOMERIDParameter, sKUParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FORECASTER_ORDER_KEYGENERATOR(string keyName, Nullable<System.DateTime> lastAccessedDate)
        {
            var keyNameParameter = keyName != null ?
                new ObjectParameter("KeyName", keyName) :
                new ObjectParameter("KeyName", typeof(string));
    
            var lastAccessedDateParameter = lastAccessedDate.HasValue ?
                new ObjectParameter("LastAccessedDate", lastAccessedDate) :
                new ObjectParameter("LastAccessedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FORECASTER_ORDER_KEYGENERATOR", keyNameParameter, lastAccessedDateParameter);
        }
    
        public virtual ObjectResult<FORECASTER_GET_KROGER_CASES_BY_DIVISION_Result> FORECASTER_GET_KROGER_CASES_BY_DIVISION(string dIVISION_NUMBER)
        {
            var dIVISION_NUMBERParameter = dIVISION_NUMBER != null ?
                new ObjectParameter("DIVISION_NUMBER", dIVISION_NUMBER) :
                new ObjectParameter("DIVISION_NUMBER", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FORECASTER_GET_KROGER_CASES_BY_DIVISION_Result>("FORECASTER_GET_KROGER_CASES_BY_DIVISION", dIVISION_NUMBERParameter);
        }
    
        public virtual ObjectResult<FORECASTER_GET_ACTUAL_ORDERS_Result> FORECASTER_GET_ACTUAL_ORDERS(string cUSTOMERID, Nullable<int> lAST_YEAR)
        {
            var cUSTOMERIDParameter = cUSTOMERID != null ?
                new ObjectParameter("CUSTOMERID", cUSTOMERID) :
                new ObjectParameter("CUSTOMERID", typeof(string));
    
            var lAST_YEARParameter = lAST_YEAR.HasValue ?
                new ObjectParameter("LAST_YEAR", lAST_YEAR) :
                new ObjectParameter("LAST_YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FORECASTER_GET_ACTUAL_ORDERS_Result>("FORECASTER_GET_ACTUAL_ORDERS", cUSTOMERIDParameter, lAST_YEARParameter);
        }
    }
}
